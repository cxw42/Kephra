[name]  pce = perfect coding environment |
              polymorphic code editor |
              perl crypted extensions ....

 Perfekt - natürlich soll diese software die beste sein
 code - text ist immer an syntax gebunden, sprich codiert
 enviroment - mehr als ein reiner editor, sondern auch hilfe und werkzeugkasten
 polymorphic - jeder soll es in allem an seine Bedürfnisse anpassen können
 editor - trotz allem die kernaufgabe
 perl - ist die sprache in der der editor geschrieben ist
 crypted - pce ist wie perl, meistens simpel aufgebaut
 extensions - pce hilft dir bei seiner eigenen erweiterung, binär und scriptisch

 pce - pse, ein zufall? namensgebung aus kosmologischen gründen
        mit ein paar quantenphysikalischen Überlegungen(bootstrap-aufbau)
        aus elementen aufgebau soll der editor soll universal einsetzbar sein (.pm)

[warum perl?]
 - perl ist effektiv, mächtig, unaufdringlich, schnell genug und meine lieblingssprache
 - perl programme laufen identisch auf jeder platform auf der auch wxWindows läuft
 - idealer textprozessor/es geht um textbasierendes editieren
 - perl als scriptsprache erlaubt einheitliches format für quellcode, config, macros,plugins
   im einheitlichen namensraum!!!
 - da der quellcode perl ist, braucht man nur den editor um den editor zu verbessern
   eingebaute hilfen untestützen dabei perfekt
 - perl ist auch eine lebenseinstellung.
   dazu gehört - ich lass dir die freiheit alles auf deine art zu tun
               - das wichtigste ist das leben selbst, und leben heisst wandel,
                 haupsache es funktioniert in dem was es tun soll (masseinheit good enough),
               - verbessert wird es später, vertrau dem lebenszyklus (praktischer anwendung),
                 dann weisst du wirklich was zu verbessern ist
               - scheu dich nicht deine ideen umzusetzen

[warum wx?]
 -ein framework muss sein, denn ich bin zu faul alles selbst zu machen, sprich es ist uneffektiv ohne.
 -pce selbt basiert wie alle gute perl programme auf  verwendbaren modulen
 -fltk kann zu wenig, qt ist nicht oss, gtk und KDE gross und basieren wie wx auch bloss auf X
 -da wx grösstenteils binär, ist es schnell genug

[softwaredesign]
- für win / lin(gtk)
 - bin anteil platformabhängig
 - src(perl + wx) plattformunabhängig
 - installer: NSIS / rpm
- visual toolkit:wxPerl
- nutzung vieler wichtiger open source gemeindschaften: perl, scintilla(wxSTC),
  wxwindows(Wx), mozilla(wxMozilla), CPAN,
- autark / keine extra detein benötigt, perl(800kB) und wx(7MB) und andere tools werden mitgebracht
  auch deswegen überlebt pce jedes umkopüieren
- fremde packete können aber bei bedarf auch weggelassen werden
- pce bsteht aus so gut es geht autonomen Module mit autoerkennung

[config]
- config in lokalen text-datein die jeden umzug überstehen (xml oder perl-code)
- alles Konfigurierbar(graphisch und in textdatein)
- teilverhalten in subconfigs splitbar / subconfigs frei einbindbar
- alles ist automatisierbar / jede Aktion ist ein macrokommando = interner befehl


[visual design]
- 1 Fenster - viele Module (möglichst wenig dialogboxen)
  - wiederverwendbare gleichstrukturierte module
  - mit gehaltener taste sollen module frei positionierbar sein
- Hauptmenü soll strukturiert alle Möglichkeiten des editors zeigen
  - soll sozusagen auch als hilfe, orientierung  und Nachschlagewerk für tastaturkürzel dienen
  - das heisst auch nur wenige Hauptmenüpunkte (B-Baum-Direktiven!)
  - deswegen auch unter-unter-menüs damit untermenüs nicht zu lang werden
  - überflüssiges kann ja jeder wegschneiden
  - vielbenutztes soll sich jeder einfach in den toolbar schieben
  - funktionalitäten von modulen sollten nicht verstreut um haupmenü sein
  - was mit dateien zu tun hat muss kommt auch unter das hauptmenü datei
  - auch die möglichkeiten der editorkomponente(kein suchen,diff oä) sollten nur unter
    bearbeiten und maximal noch einen haupmenüpunkt(hm) zu finden sein
  - da konfiguriebarkeit hier mit das wichtigste muss einstellungen auch ein hm sein
- optionale kommandozeile (z.B 1für shell und eine für suchbefehle)
- exotische schriftsätze später, dank pango

[module]
geplante module/bennung noch unklar
mehrfache instanzen eines module(2 texte parralel) sollen möglich sein

(neutron)  - kern/plugin,update& statuszentrale
(proton)   - editorkomponente oberfläche xrc
(elektron) - kommandozeile kommandozentrale

weitere:
-projektverwaltung
-schnittstelle zum dateisystem (ftp)
-shortcuts
-semantische struktur
-sourcebibliothekeken
-kurzhilfen zur aktuellen programmiersprache / sprachbaum
-vorschau/wxMozilla/wxIE vielleicht später auch für tex uä
-streng geheime visualisierungs werkzeuge

[extensions]
